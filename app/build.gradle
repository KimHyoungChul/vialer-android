apply plugin: 'com.android.application'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-android'
apply plugin: 'io.fabric'
apply plugin: 'com.google.firebase.firebase-perf'

def keystorePropertiesFile = rootProject.file("keystore.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.voipgrid.app"
        minSdkVersion 23
        targetSdkVersion 28
        versionCode 139
        versionName "6.3 beta 03"
        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true
        flavorDimensions "default"
        ndk {
            moduleName "pjsua2"
        }
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        // The following argument makes the Android Test Orchestrator run its
        // "pm clear" command after each test invocation. This command ensures
        // that the app's state is completely cleared between tests.
        testInstrumentationRunnerArguments clearPackageData: 'true'

        // This should be removed when Android Q build tools
        // are available, and you can use Build.VERSION_CODES.Q
        buildConfigField 'int', 'ANDROID_Q_SDK_VERSION', '29'

        buildConfigField "String", 'TEST_USERNAME', '"jeremy5@wearespindle.com"'
        buildConfigField "String", 'TEST_PASSWORD', '"jeremy37482"'
    }
    signingConfigs {
        vialer {
            keyAlias keystoreProperties['vialerKeyAlias']
            keyPassword keystoreProperties['vialerKeyPassword']
            storeFile file(keystoreProperties['vialerStoreFile'])
            storePassword keystoreProperties['vialerStorePassword']
        }
        voys {
            keyAlias keystoreProperties['voysKeyAlias']
            keyPassword keystoreProperties['voysKeyPassword']
            storeFile file(keystoreProperties['voysStoreFile'])
            storePassword keystoreProperties['voysStorePassword']
        }
        verbonden {
            keyAlias keystoreProperties['verbondenKeyAlias']
            keyPassword keystoreProperties['verbondenKeyPassword']
            storeFile file(keystoreProperties['verbondenStoreFile'])
            storePassword keystoreProperties['verbondenStorePassword']
        }
        annabel {
            keyAlias keystoreProperties['annabelKeyAlias']
            keyPassword keystoreProperties['annabelKeyPassword']
            storeFile file(keystoreProperties['annabelStoreFile'])
            storePassword keystoreProperties['annabelStorePassword']
        }
    }
    dexOptions {
        // Prevent OutOfMemory with MultiDex during the build phase
        javaMaxHeapSize "4g"
    }
    productFlavors {
        vialer {
            applicationId "com.voipgrid.vialer"
            copy {
                from 'src/vialer/'
                include '*.json'
                into '.'
            }
        }
        staging {
            applicationId "com.voipgrid.vialer"
            copy {
                from 'src/staging/'
                include '*.json'
                into '.'
            }
            copy {
                from 'src/vialer/'
                include 'google-services.json'
                into '.'
            }
        }
        voys {
            applicationId "com.voys.app"
            copy {
                from 'src/voys/'
                include '*.json'
                into '.'
            }
        }
        verbonden {
            applicationId "nl.verbonden.app"
            copy {
                from 'src/verbonden/'
                include '*.json'
                into '.'
            }
        }
        annabel {
            applicationId "com.bellenmetannabel.app"
            copy {
                from 'src/annabel/'
                include '*.json'
                into '.'
            }
        }
    }
    lintOptions {
        checkReleaseBuilds true
    }
    buildTypes {
        release {
            productFlavors.vialer.signingConfig signingConfigs.vialer
            productFlavors.voys.signingConfig signingConfigs.voys
            productFlavors.verbonden.signingConfig signingConfigs.verbonden
            productFlavors.annabel.signingConfig signingConfigs.annabel

            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            manifestPlaceholders = [enableCrashReporting:"true"]
        }
        debug {
            manifestPlaceholders = [enableCrashReporting:"false"]
        }
        debug {
            versionNameSuffix '-DEBUG'
        }
    }
    dexOptions {
        javaMaxHeapSize "4g"
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

repositories {
    google()
    jcenter()
    flatDir {
        dirs 'libs'
    }
}

ext {
    supportLibVersion = "1.0.2"
    espressoVersion = "2.2"
    androidTestVersion = "1.1.0"
    firebaseCoreVersion = "16.0.8"
    firebaseMessagingVersion = "17.6.0"
    googleAnalyticsVersion = "16.0.8"
    okHttpVersion = "3.11.0"
    retroFitVersion = "2.4.0"
    roboElectricVersion = "3.6.2"
    mockitoCoreVersion = "2.23.0"
    butterKnifeVersion = "9.0.0-rc1"
    daggerVersion = "2.18"
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    // Modules.
    implementation files('libs/logentries-android.jar')
    implementation(name: 'pjsip', ext: 'aar')

    // Support libs.
    implementation "androidx.multidex:multidex:2.0.1"
    implementation "androidx.appcompat:appcompat:${supportLibVersion}"
    implementation "com.google.android.material:material:1.0.0"
    implementation "androidx.annotation:annotation:1.0.2"
    implementation "androidx.gridlayout:gridlayout:1.0.0"
    implementation "androidx.cardview:cardview:1.0.0"
    implementation "androidx.legacy:legacy-support-v4:1.0.0"
    implementation "androidx.constraintlayout:constraintlayout:1.1.3"

    // Firebase setup.
    implementation "com.google.firebase:firebase-core:${firebaseCoreVersion}"
    implementation "com.google.firebase:firebase-messaging:${firebaseMessagingVersion}"

    // Firebase Performance Measurement.
    implementation 'com.google.firebase:firebase-perf:16.2.5'

    // Google Analytics setup.
    implementation "com.google.android.gms:play-services-analytics:${googleAnalyticsVersion}"

    // Circular image view
    implementation 'de.hdodenhof:circleimageview:2.2.0'
    implementation 'com.amulyakhare:com.amulyakhare.textdrawable:1.0.1'

    // Retrofit and OkHttp - Api calls
    implementation "com.squareup.retrofit2:retrofit:${retroFitVersion}"
    implementation "com.squareup.retrofit2:converter-gson:${retroFitVersion}"
    implementation "com.squareup.okhttp3:okhttp:${okHttpVersion}"

    implementation 'com.github.anrwatchdog:anrwatchdog:1.3.0'

    implementation "com.google.dagger:dagger:${daggerVersion}"
    annotationProcessor "com.google.dagger:dagger-compiler:${daggerVersion}"
    implementation "com.google.dagger:dagger-android:${daggerVersion}"
    annotationProcessor "com.google.dagger:dagger-android-processor:${daggerVersion}"
    implementation "com.google.dagger:dagger-android-support:${daggerVersion}"
    implementation 'com.github.tamir7.contacts:contacts:1.1.7'

    implementation 'javax.inject:javax.inject:1@jar'
    implementation 'com.github.lzyzsd.randomcolor:library:1.0.0'

    implementation 'com.github.f0ris.sweetalert:library:1.5.1'
    // Butter knife - Field and method binding for views
    implementation "com.jakewharton:butterknife:${butterKnifeVersion}"
    annotationProcessor "com.jakewharton:butterknife-compiler:${butterKnifeVersion}"

    // Scytale -  Manage key generation
    implementation 'com.yakivmospan:scytale:1.0.1'
    implementation "com.github.nisrulz:easydeviceinfo-base:2.4.1"
    implementation 'joda-time:joda-time:2.10.1'
    implementation "android.arch.paging:runtime:1.0.1"

    // Testing below are supported api level because SNAPSHOT version is to unstable.
    testImplementation "org.robolectric:robolectric:${roboElectricVersion}"
    testImplementation "org.mockito:mockito-core:${mockitoCoreVersion}"
    testImplementation "androidx.test.ext:junit:1.1.0"

    // Setup for instrumented tests.
    androidTestImplementation "androidx.test:runner:1.1.1"
    androidTestUtil "androidx.test:orchestrator:1.1.1"
    androidTestImplementation "androidx.test:rules:${androidTestVersion}"
    implementation "androidx.test.ext:junit:1.1.0"
    androidTestImplementation "androidx.test.espresso:espresso-core:3.1.1"
    androidTestImplementation 'androidx.annotation:annotation:1.0.2'

    // Automated screenshots for instrumented tests.
    androidTestImplementation 'tools.fastlane:screengrab:1.1.0'

    // Crashlytics
    releaseImplementation "com.crashlytics.sdk.android:crashlytics:2.9.9"
    implementation "androidx.core:core-ktx:1.0.2"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
}

// Needs to be applied at the bottom of the gradle file otherwise it will create a conflict.
apply plugin: "com.google.gms.google-services"
